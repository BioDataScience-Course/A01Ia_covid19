---
title: "Suivi de la vaccination contre le COVID-19 en Belgique"
author: "___"
date: "`r Sys.Date()`"
format:
  html:
    code-fold: true
    code-tools: true
editor: visual
---

<!--# Ceci est un commentaire. Il n'apparaît pas dans votre rapport final. Observez la structure balisée par des '---' ci-dessus. C'est une zone particulière qui renseigne les informations de base du document telles que le titre, l'auteur, la date ou encore le format de sortie du document. Cette zone s'appelle un entête YAML. -->

<!--% Ceci est une consigne. Elle sera aussi invisible dans la version finale. Elle vous explique ce que vous devez faire. Remplacez author: "___" par votre nom. ex: author: "John Doe". Attention, l'entête YAML est très sensible aux espaces, aux guillemets et à l'"indentation" (= le nombre d'espaces blancs au début de chaque ligne). Par précaution, mettez toujours le texte derrière title:, author:, date:, ... entre guillemets doubles et respectez l'indentation initiale. -->

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
SciViews::R(lang = "fr")
library(tabularise)
tabularise <- function(x, ...) {
  tabularise::tabularise(x, ...) |>
    Stb$set_caption(knitr::opts_current$get('tbl-cap')) |>
    Stb$autofit()
}
Stb$set_flextable_defaults(big.mark = "\u00a0")
# Importation des données locales depuis /data
vaccine <- read("../data/be_vaccine_covid.rds")
last_update <- paste0("Mis à jour le " , attr(vaccine, "downloaded"))
```

<!--# Observez les instructions ci-dessus, le code est placé dans une zone particulière que l'on nomme un "chunk". Il n'est pas nécessaire de comprendre ces instructions pour l'instant, mais essayer quand même de deviner ce qu'elles font. Par exemple, la ligne avec read(...), "lire" en anglais, lit les données depuis le fichier "be_vaccine_covid.rds" qu'il va chercher dans le dossier "data". Vous apprendrez plus tard à écrire ces instructions vous-mêmes. Concentrez-vous sur la succession des zones de texte et des chunks (zones de code). Vous pouvez exécuter les instrcutions dans la Console en cliquant sur le triangle vert en haut à droite du chunk. Vous pouvez ainsi exécuter les chunks du document les uns après les autres dans l'ordre. -->

# Introduction

Ce carnet de notes étudie les campagnes de vaccination contre le COVID-19 en Belgique. Celles-ci ont débuté le `r min(vaccine$date)`.

<!--# Ci-dessus, vous pouvez observer que du code R a été intégré au sein du texte, le r min(...). Ce code est remplacé par le résultat du calcul à l'intérieur du paragraphe de texte dans la version finale, dite "compilée" du document. Cette technique est très utile pour ajouter à votre texte des éléments contextuels aux données. -->

![La vaccination COIVID-19 se fait par injection dans le bras.](figures/vaccination.jpg){fig-align="center" width="75%"}

<!--# Vous pouvez observer ci-dessus qu'une image est incluse dans le document. Pour visualiser la syntaxe employée pour l'intégrer ici, passez en mode "Source" qui est le premier bouton dans la barre d'outil du bas juste au dessus du document. Ensuite repassez en mode "Visual" et observer comment se présente le contenu dans les deux modes. -->

Les analyses ci-dessous utilisent les données datant du `r attr(vaccine, "downloaded")`.

# Analyses

En Belgique, `r prettyNum(fsum(vaccine$count), big.mark = "\u00a0")` doses de vaccins COVID-19 ont été administrées.

```{r week}
#| fig-cap: Vaccination dans le temps en Belgique.
vaccine %>.%
  smutate(., 
    week = lubridate::floor_date(date,"week", week_start = 1)) %>.%
  sgroup_by(., week) |> ssummarise(tot = fsum(count)) %>.%
  chart(data = ., tot ~ week) +
    geom_point() +
    geom_line() +
    labs(y = "Doses administrées par semaine", x = "Date")
```

-   Deux campagnes de vaccination sont observées via le nombre de vaccinations par semaine au cours du temps.

-   Une troisième campagne a débuté en septembre 2022.

## Types de vaccins utilisés

```{r brand}
#| tbl-cap: Vaccins par type.
vaccine %>.%
  sgroup_by(., brand) |> ssummarise(nb = fsum(count)) %>.%
  sarrange(., desc(nb)) %->%
  nb_brand

tabularise(nb_brand)
```

Ce tableau indique la répartition des vaccins administrés par type de vaccin.

<!--% Interprétez ce tableau : proposez un élément supplémentaire en dessous du premier dans la liste ci-dessous. Naturellement, vous devez avoir généré le tableau au préalable en cliquant qur les triangles verts des différents chunks jusqu'à celui-ci pour pouvoir faire cette interprétation. -->

-   le vaccin le plus administré est le `r ffirst(nb_brand$brand)`.

-   ...

```{r brand_dose}
#| tbl-cap: Vaccins par type et par dose.
vaccine %>.%
  sgroup_by(., brand, dose) |> ssummarise(nb = fsum(count)) %>.%
  sarrange(., desc(nb)) %>.%
  spivot_wider(., names_from = "dose", values_from = "nb") %>.%
  srename(., Vaccin = brand) %>.%
  relocate(., C, .after = B) %>.%
  replace_NA(., value = 0) %->%
  brand_dose

tabularise(brand_dose, auto.labs = FALSE)
```

Le tableau ci-dessus montre la répartition du nombre de doses de vaccins administrées en Belgique en fonction du type de dose (A, B, C, E, E2, E3). Les doses A et B concernent les vaccins qui devaient être pris en deux injections pour être efficaces alors que la dose C correspond au vaccin qui n'en nécessite qu'une seule. Les doses E, E2 et E3 sont les doses de rappels.

## Différences homme-femme

Le nombre de vaccins administrés par genre est représenté ci-dessous.

```{r brand_sex}
#| tbl-cap: Vaccins par genre.
vaccine %>.%
  sgroup_by(., brand, sex) |> ssummarise(nb = fsum(count)) %>.%
  sdrop_na(., sex) %>.%
  sarrange(., desc(nb)) %>.%
  spivot_wider(., names_from = "sex", values_from = "nb") %>.%
  srename(., Vaccin = brand, Femme = F, Homme = M) %->%
  brand_sex

tabularise(brand_sex, auto.labs = FALSE)
```

<!--% Interprétez le second tableau : complétez deux éléments, sous forme de liste des résultats relatifs à la répartition des vaccins administrés par genre. -->

-   ...

-   ...

## Doses de rappel

Notre pays a encouragé les Belges à se faire administrer des doses de rappels.

```{r age}
#| fig-cap: Rappels 2 et 3 en fonction de l'âge.
# Filtrer les données pour ne garder que les doses 2 et 3 de rappels
vaccine %>.%
  sfilter(., dose %in% c("E2", "E3")) %>.%
  sgroup_by(., agegroup, region) |> ssummarise(
    tot = fsum(count) |>
      labelise("Nombre de rappels 2 et 3 administrés")) %->%
  comp_vaccine

comp_vaccine %>.%
  sdrop_na(., region) %>.%
  chart(., tot ~ agegroup %fill=% region) +
    geom_col() +
    xlab("Classes d'âges")
```

Ce graphique représente uniquement les secondes et troisièmes doses de rappels et il montre comment elles se répartissent en fonction des classes d'âge.

<!--% Interprétez ce graphique : ajoutez deux éléments supplémentaires à la liste ci-dessous relatifs à la répartition des vaccins administrés par groupe d'âge. -->

-   On dénombre `r prettyNum(sum(comp_vaccine$tot), big.mark = "\u00a0")` doses de rappels 2 et 3 administrées.

-   ...

-   ...

<!--# Vous voilà arrivé au bout de ce bloc-notes. Ce type de document relativement informel reprend les différents éléments de vos analyses de données, y compris les tableaux et les graphiques, suivis d'une interprétation complète mais brève (qui peut par exemple se présenter sous forme d'une liste des points à retenir). Le format R Markdown ou Quarto est très utile ici pour combiner du texte structuré avec les instructions R qui effectuent l'analyse dans des chunks. Les tableaux et graphiques sont directement placés au bon endroit dans le document final. De plus, si les données changent, il suffit de réexécuter le script R d'importation et de recompiler la version finale du document (bouton Tricoter ou Rendu) pour le mettre à jour. -->

<!--% Une fois le document complété, compilez-en la version finale au format HTML (vous devriez connaître maintenant le bouton sur lequel il faut appuyer pour cela. La version finale se construit (rapport de progression dans l'onglet Rendre ci-dessous), et puis il apparait dans l'onglet Visualisateur en bas à droite... dans toute sa splendeur. En cas de problème, lisez le message qui explique ce qui ne va pas dans l'onglet Rendre, et corrigez l'erreur (le mode "Source" peut être intéressant dans ce cas, car il indique les numéros de lignes qui apparaîssent dans le message pour repérer facilement où l'erreur s'est produite). -->

<!--# Les instructions R apparaissent dans le document final. Pour un bloc-notes, c'est souhaitable pour en faciliter la lecture et la compréhension. Pour un rapport plus formel, il est naturellement possible de cacher ce code (soit définitivement, soit permettre de ne l'afficher qu'à la demande). Vous découvrirez comment faire plus tard... -->
